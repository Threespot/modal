/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Modal; });\n/* harmony import */ var _threespot_freeze_scroll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @threespot/freeze-scroll */ \"./node_modules/@threespot/freeze-scroll/dist/freeze-scroll.m.js\");\n/* harmony import */ var _threespot_freeze_scroll__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_threespot_freeze_scroll__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ev_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\");\n/* harmony import */ var ev_emitter__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ev_emitter__WEBPACK_IMPORTED_MODULE_1__);\n//------------------------------------------------------------------------\n// Modal windows\n//\n// - Progressively enhanced, works with pure CSS thanks to the `:target` pseudo selector\n// - Supports multiple toggles and multiple close buttons\n//\n// References:\n// - https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/dialog-modal/dialog.html\n// - https://www.smashingmagazine.com/2014/09/making-modal-windows-better-for-everyone/\n// - https://www.smashingmagazine.com/2016/09/building-social-a-case-study-on-progressive-enhancement/\n// - https://bitsofco.de/accessible-modal-dialog/\n// - https://haltersweb.github.io/Accessibility/dialog.html\n// - https://yoast.com/dev-blog/the-a11y-monthly-making-modals-accessible/\n//\n// Note: Avoid aria-modal=\"true\" until support is beter\n//       https://labs.levelaccess.com/index.php/ARIA_Dialog_Role_with_modal_true\n//------------------------------------------------------------------------\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n/**\n * Accessible modal window\n * @param {HTMLElement} el - Toggle button DOM node\n * @param {Object} opts - Options\n * @param {number} [opts.transitionSpeed=\"100\"] - CSS transition speed, required to delay focus\n * @param {string} [opts.activeClasses=\"\"] - Class(es) to apply when modal is open\n * @param {string} [opts.modalContentClass=\"Modal-content\"] - Class of modal content wrapper\n * @param {function} [opts.onReady=\"\"] - Ready callback function\n */\n\nvar Modal = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Modal, _EventEmitter);\n\n  var _super = _createSuper(Modal);\n\n  function Modal(el, opts) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    // Have to call super() first before referencing “this” since we’re extending EventEmitter\n    // https://stackoverflow.com/a/43591507/673457\n    _this = _super.call(this); // Use Object.assign() to merge “opts” object with default values in this.options\n\n    _this.options = Object.assign({}, {\n      transitionSpeed: 100,\n      // CSS transition speed, required to delay focus\n      activeClasses: \"\",\n      // string, accepts multiple space-separated classes\n      modalContentClass: \"Modal-content\",\n      // string, optional\n      onReady: null // ready callback function\n\n    }, opts);\n\n    if (_this.options.activeClasses.length) {\n      // Check if active class string contains multiple classes\n      if (_this.options.activeClasses.indexOf(\" \") > -1) {\n        // Convert to array and remove any empty string values\n        // caused by having multiple spaces in a row.\n        _this.options.activeClasses = _this.options.activeClasses.split(\" \").filter(function (n) {\n          return n.length;\n        });\n      } else {\n        // We still need to convert a single active class to an array\n        // so we can use the spread syntax later in classList.add()\n        _this.options.activeClasses = [_this.options.activeClasses];\n      }\n    }\n\n    _this.el = el;\n\n    _this.el.classList.add(\"js-init\");\n\n    _this.isOpen = false;\n    _this.hasToggles = false;\n    _this.contentEl = _this.el.querySelector(\".Modal-content\");\n    _this.customContentEl = _this.el.querySelector(\".\" + _this.options.modalContentClass) || _this.contentEl;\n    _this.closeEls = _this.el.querySelectorAll(\"[data-modal-close]\"); // If modal has an ID, check for matching toggle elements with “data-modal” attribute\n\n    if (_this.el.id) {\n      _this.toggleEls = document.querySelectorAll(\"[data-modal=\\\"\".concat(_this.el.id, \"\\\"]\"));\n      _this.hasToggles = !!_this.toggleEls.length;\n    } else {\n      // If modal doesn’t have an id, add a random one for “aria-controls”\n      // https://gist.github.com/gordonbrander/2230317\n      _this.el.id = Math.random().toString(36).substr(2, 4);\n    } // Store currently focused element when modal opens so we can restore focus when it closes\n\n\n    _this.prevFocusedEl = null; // Find focusable elements inside of modal window (used to prevent tabbing outside of modal)\n\n    _this.focusableEls = _this.getFocusableEls(); // Save first and last focusable elements\n\n    if (_this.focusableEls.length) {\n      _this.firstFocusableEl = _this.focusableEls[0];\n      _this.lastFocusableEl = _this.focusableEls[_this.focusableEls.length - 1];\n    } // Check for aria-label/aria-labelledby on modal (a11y best practice)\n\n\n    if (!_this.el.getAttribute(\"aria-label\") && !_this.el.getAttribute(\"aria-labelledby\")) {\n      console.warn(\"A11y Issue: Modal window should have an “aria-label” or “aria-labelledby” attribute\", _this.el);\n    } // Init modal window\n\n\n    _this.init();\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      // Add aria attributes to modal window\n      this.el.setAttribute(\"aria-hidden\", \"true\");\n      this.el.setAttribute(\"role\", \"dialog\"); // Add aria attributes to toggle buttons\n\n      if (this.hasToggles) {\n        this.toggleEls.forEach(function (toggleEl) {\n          // Add “aria-controls” but be aware only JAWS supports it\n          // https://inclusive-components.design/menus-menu-buttons/#ariacontrols\n          toggleEl.setAttribute(\"aria-controls\", _this2.el.id);\n          toggleEl.setAttribute(\"aria-expanded\", \"false\");\n          toggleEl.setAttribute(\"role\", \"button\");\n        });\n      } // Add aria attributes to close buttons\n\n\n      if (this.closeEls.length) {\n        this.closeEls.forEach(function (closeEl) {\n          closeEl.setAttribute(\"role\", \"button\");\n        });\n      } // Add event listeners\n\n\n      this.bindEvents(); // Check for ready callback\n\n      if (typeof this.options.onReady === \"function\") {\n        this.options.onReady();\n      } // Check URL hash to determine if modal should start open\n      // if (\n      //   this.el.id &&\n      //   window.location.hash &&\n      //   window.location.hash.substring(1) == this.el.id\n      // ) {\n      //   this.open();\n      // }\n\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Remove aria attributes on modal window\n      this.el.removeAttribute(\"aria-hidden\");\n      this.el.removeAttribute(\"role\");\n      this.el.removeAttribute(\"tabindex\"); // Remove aria attributes on toggle buttons\n\n      if (this.hasToggles) {\n        this.toggleEls.forEach(function (toggleEl) {\n          toggleEl.removeAttribute(\"aria-controls\");\n          toggleEl.removeAttribute(\"aria-expanded\");\n          toggleEl.removeAttribute(\"role\");\n        });\n      } // Remove aria attributes on close buttons\n\n\n      if (this.closeEls.length) {\n        this.closeEls.forEach(function (closeEl) {\n          closeEl.removeAttribute(\"aria-label\");\n          closeEl.removeAttribute(\"role\");\n        });\n      } // Remove event listeners\n\n\n      this.unbindEvents(); // Trigger destroy event\n\n      this.emitEvent(\"destroy\");\n    } // Find focusable elements inside of modal window (used to prevent tabbing outside of modal)\n    // https://bitsofco.de/accessible-modal-dialog/\n\n  }, {\n    key: \"getFocusableEls\",\n    value: function getFocusableEls() {\n      var focusableEls = this.el.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]'); // Convert NodeList to Array\n\n      return _toConsumableArray(focusableEls);\n    } // Get currently focused element\n    // https://stackoverflow.com/a/40873560/673457\n    // Could also use document.querySelector(\":focus\") but that’s likely less performant\n\n  }, {\n    key: \"getFocusedEl\",\n    value: function getFocusedEl() {\n      if (document.hasFocus() && document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n        return document.activeElement;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"focusDelay\",\n    value: function focusDelay(el) {\n      var self = this; // Use setTimeout() to ensure element is focused\n      // https://stackoverflow.com/questions/33955650/what-is-settimeout-doing-when-set-to-0-milliseconds/33955673\n      // https://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful\n      // https://blog.sessionstack.com/how-javascript-works-event-loop-and-the-rise-of-async-programming-5-ways-to-better-coding-with-2f077c4438b5\n\n      window.setTimeout(function () {\n        return el.focus();\n      }, this.options.transitionSpeed);\n    }\n  }, {\n    key: \"windowClickHandler\",\n    value: function windowClickHandler(evt) {\n      // Ignore click on the toggle button, which already has an event handler\n      var isToggle = Array.prototype.indexOf.call(this.toggleEls, evt.target.closest(\"[data-modal]\")) > -1; // Don’t close if target el has been removed from the DOM by the time this callback runs\n\n      var targetElExists = document.body.contains(evt.target); // Do nothing if modal is closed, a toggle was clicked,\n      // or target element no longer exists.\n\n      if (!this.isOpen || isToggle || !targetElExists) {\n        return;\n      } // Don’t close if target is a child of the modal wrapper\n\n\n      var targetInsideWrapper = this.customContentEl && this.customContentEl.contains(evt.target); // Don’t close if target is the modal wrapper itself\n\n      var targetIsWrapper = this.customContentEl.isSameNode(evt.target); // For single-page apps or site using pjax (e.g. Turbolinks, Swup),\n      // we need to manually close the modal when a link is clicked,\n      // but ignore links that have been set to role=\"button\".\n      // let targetIsLink = evt.target.closest('a:not([role=\"button\"])');\n      //\n      // Then add this additional condition below:\n      // || (targetInsideWrapper && targetIsLink)\n      // Close when click target is outside of the modal window,\n\n      if (!(targetInsideWrapper || targetIsWrapper)) {\n        this.close(evt);\n      }\n    }\n  }, {\n    key: \"keydownHandler\",\n    value: function keydownHandler(evt) {\n      // Do nothing if modal is closed\n      if (!this.isOpen) {\n        return false;\n      } // Close with escape key\n\n\n      if (evt.which === 27) {\n        this.close(evt);\n      } // Prevent tabbing outside of modal\n\n\n      if (evt.which === 9) {\n        // If no focusable items, close the modal\n        if (!this.focusableEls.length) {\n          this.close(evt);\n          return false;\n        } // Find currently focused element\n\n\n        var focusedEl = this.getFocusedEl(); // If tabbing forward and the last item is focued, focus the first item\n\n        if (!evt.shiftKey && focusedEl == this.lastFocusableEl) {\n          // Prevent default since we're manually focusing the first element\n          evt.preventDefault();\n          this.firstFocusableEl.focus();\n        } else if (evt.shiftKey && (focusedEl == this.firstFocusableEl || focusedEl == this.contentEl)) {\n          // If tabbing backwards and the first item is focused, focus the last item\n          evt.preventDefault();\n          this.lastFocusableEl.focus();\n        }\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this3 = this;\n\n      // Toggle buttons\n      if (this.hasToggles) {\n        // Note: Event callbacks need to be assigned to a var so they can be removed\n        // https://stackoverflow.com/a/22870717/673457\n        this.toggleClick = this.toggle.bind(this);\n        this.toggleEls.forEach(function (toggleEl) {\n          toggleEl.addEventListener(\"click\", _this3.toggleClick);\n        });\n      } // Close buttons\n\n\n      if (this.closeEls.length) {\n        // Event callback\n        this.closeClick = this.close.bind(this);\n        this.closeEls.forEach(function (closeEl) {\n          closeEl.addEventListener(\"click\", _this3.closeClick);\n        });\n      } // Close if click outside of modal content\n\n\n      this.windowClick = this.windowClickHandler.bind(this);\n      window.addEventListener(\"click\", this.windowClick); // Keyboard events\n\n      this.keydown = this.keydownHandler.bind(this);\n      window.addEventListener(\"keydown\", this.keydown);\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this4 = this;\n\n      // Toggle buttons\n      if (this.hasToggles) {\n        this.toggleEls.forEach(function (toggleEl) {\n          toggleEl.removeEventListener(\"click\", _this4.toggleClick);\n        });\n      } // Close buttons\n\n\n      if (this.closeEls.length) {\n        this.closeEls.forEach(function (closeEl) {\n          closeEl.removeEventListener(\"click\", _this4.closeClick);\n        });\n      } // Window events\n\n\n      window.removeEventListener(\"click\", this.windowClick);\n      window.removeEventListener(\"keydown\", this.keydown);\n    } // Expand expandable\n\n  }, {\n    key: \"open\",\n    value: function open(evt) {\n      var _this5 = this;\n\n      evt.preventDefault(); // Save currently focused element to focus on close\n\n      this.prevFocusedEl = this.getFocusedEl(); // Disable scrolling\n\n      _threespot_freeze_scroll__WEBPACK_IMPORTED_MODULE_0___default.a.freeze(); // Scroll modal content to top\n      // (without this, content will be vertically centered)\n\n      if (this.contentEl) {\n        this.contentEl.scrollTop = 0;\n      } // Update modal aria attributes\n\n\n      this.el.setAttribute(\"aria-hidden\", \"false\"); // Add custom classes\n\n      if (this.options.activeClasses.length) {\n        var _this$el$classList;\n\n        (_this$el$classList = this.el.classList).add.apply(_this$el$classList, _toConsumableArray(this.options.activeClasses));\n      } // Update toggle aria attributes\n\n\n      if (this.hasToggles) {\n        this.toggleEls.forEach(function (toggleEl) {\n          toggleEl.setAttribute(\"aria-expanded\", \"true\"); // Add custom classes\n\n          if (_this5.options.activeClasses.length) {\n            var _toggleEl$classList;\n\n            (_toggleEl$classList = toggleEl.classList).add.apply(_toggleEl$classList, _toConsumableArray(_this5.options.activeClasses));\n          }\n        });\n      } // Focus modal on open\n\n\n      if (this.contentEl) {\n        this.contentEl.setAttribute(\"tabindex\", \"-1\");\n        this.focusDelay(this.contentEl);\n      } else {\n        this.el.setAttribute(\"tabindex\", \"-1\");\n        this.focusDelay(this.el);\n      } // Update URL hash so users can link directly to the modal window content\n      // Use history.replaceState() to prevent adding a new history entry\n      // Note: If replaceState isn’t supported, modal-toggles.js won’t prevent the\n      // default click event, causing the hash to update and creating a new history entry.\n      // if (history.replaceState) {\n      //   history.replaceState(null, \"\", \"#\" + this.el.id);\n      // }\n      // Update state\n\n\n      this.isOpen = true; // Trigger open event\n\n      this.emitEvent(\"open\");\n    } // Collapse expandable\n\n  }, {\n    key: \"close\",\n    value: function close(evt) {\n      var _this6 = this;\n\n      evt.preventDefault(); // Clear hash using replaceState() to prevent adding a new history entry\n      // if (history.replaceState) {\n      //   history.replaceState(null, \"\", window.location.pathname);\n      // }\n      // Update modal aria attributes\n\n      this.el.setAttribute(\"aria-hidden\", \"true\"); // Remove custom classes\n\n      if (this.options.activeClasses.length) {\n        var _this$el$classList2;\n\n        (_this$el$classList2 = this.el.classList).remove.apply(_this$el$classList2, _toConsumableArray(this.options.activeClasses));\n      } // Update toggle aria attributes\n\n\n      if (this.hasToggles) {\n        this.toggleEls.forEach(function (toggleEl) {\n          toggleEl.setAttribute(\"aria-expanded\", \"false\"); // Remove custom classes\n\n          if (_this6.options.activeClasses.length) {\n            var _toggleEl$classList2;\n\n            (_toggleEl$classList2 = toggleEl.classList).remove.apply(_toggleEl$classList2, _toConsumableArray(_this6.options.activeClasses));\n          }\n        });\n      } // Enable scrolling\n\n\n      _threespot_freeze_scroll__WEBPACK_IMPORTED_MODULE_0___default.a.unfreeze(); // Shift focus to previously focused element\n\n      if (this.prevFocusedEl) {\n        this.focusDelay(this.prevFocusedEl);\n      } else if (this.hasToggles) {\n        // Focus the first toggle if nothing was previously focused\n        this.focusDelay(this.toggleEls[0]);\n      } // Update state\n\n\n      this.isOpen = false; // Trigger close event\n\n      this.emitEvent(\"close\");\n    } // Toggle expandable\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(evt) {\n      if (this.isOpen) {\n        this.close(evt);\n      } else {\n        this.open(evt);\n      }\n    }\n  }]);\n\n  return Modal;\n}(ev_emitter__WEBPACK_IMPORTED_MODULE_1___default.a);\n\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/@threespot/freeze-scroll/dist/freeze-scroll.m.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@threespot/freeze-scroll/dist/freeze-scroll.m.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./index.js\":\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"//------------------------------------------------------------------------\\n// Disable scrolling (e.g. when modal window is open)\\n//\\n// Inspired by https://benfrain.com/preventing-body-scroll-for-modals-in-ios/\\n//\\n// Note: Once Safari and iOS Safari support the “touch-action” CSS property,\\n//       we can simply toggle a class that adds the following:\\n//\\n//       html,\\n//       body {\\n//         overflow: hidden !important;\\n//         touch-action: none !important;\\n//       }\\n//\\n//       /* Add class to elements like modal windows that still need to scroll */\\n//       .allow-scroll { touch-action: auto !important; }\\n//\\n// https://caniuse.com/#feat=css-touch-action\\n//------------------------------------------------------------------------\\n\\n\\nmodule.exports = {\\n  // Save current scroll position when scrolling is disabled so we can reset it when enabled\\n  _scrollPos: 0,\\n\\n  // Track whether or not we have injected CSS the already\\n  _hasCSS: false,\\n\\n  // Inject <style> tag with CSS rules (simpler than toggling a lot of inline styles)\\n  _injectCSS: function _injectCSS() {\\n\\n    // Don’t add styles more than once\\n    if (!this._hasCSS) {\\n      var css = '\\\\n        html.js-no-scroll { height: 100% !important; }\\\\n        .js-no-scroll body {\\\\n          height: 100%;\\\\n          overflow: hidden !important;\\\\n          position: fixed !important;\\\\n          width: 100% !important;\\\\n        }';\\n\\n      // Note: Setting “position: fixed” on the body prevents iOS from scrolling.\\n      //       However, this will cause the browser to scroll to the top, so we must\\n      //       add inline “height” and “top” styles to the body to address this.\\n\\n      // Create <style> tag and add to <head>\\n      // https://stackoverflow.com/a/524721/673457\\n      var styleEl = document.createElement('style');\\n      styleEl.type = 'text/css';\\n      styleEl.appendChild(document.createTextNode(css));\\n      document.head.appendChild(styleEl);\\n\\n      // Update var so we can avoid loading the CSS multiple times\\n      this._hasCSS = true;\\n    }\\n  },\\n\\n  _saveScrollPos: function _saveScrollPos() {\\n    this._scrollPos = window.pageYOffset || document.documentElement.scrollTop;\\n  },\\n\\n  /**\\n   * Disable scrolling\\n   */\\n  freeze: function freeze() {\\n    // Add required inline CSS (only runs first time)\\n    this._injectCSS();\\n\\n    this._saveScrollPos();\\n\\n    // Add class to prevent page scrolling (sets fixed position on body)\\n    document.documentElement.classList.add(\\\"js-no-scroll\\\");\\n\\n    // Add inline styles if not already at top of page\\n    if (this._scrollPos > 0) {\\n      document.body.style.height = \\\"calc(100% + \\\" + this._scrollPos + \\\"px)\\\";\\n      document.body.style.top = -this._scrollPos + \\\"px\\\";\\n    }\\n  },\\n\\n  /**\\n   * Enable scrolling\\n   */\\n  unfreeze: function unfreeze() {\\n    // Remove js-no-scroll class\\n    document.documentElement.classList.remove(\\\"js-no-scroll\\\");\\n\\n    if (this._scrollPos > 0) {\\n      // Remove inline styles on body, which causes the page to jump to the top.\\n      document.body.style.height = \\\"\\\";\\n      document.body.style.top = \\\"\\\";\\n\\n      // Disable native smooth scrolling before resetting the scroll position.\\n      // Otherwise, there would be an annoying jump after scrolling is enabled.\\n      if (document.documentElement.style.hasOwnProperty('scrollBehavior')) {\\n        document.documentElement.style.scrollBehavior = \\\"auto\\\";\\n      }\\n\\n      // Reset scroll position to what it was before scrolling was disabled.\\n      window.scrollTo(0, this._scrollPos);\\n\\n      // Re-enable native smooth scrolling\\n      if (document.documentElement.style.hasOwnProperty('scrollBehavior')) {\\n        document.documentElement.style.scrollBehavior = \\\"\\\";\\n      }\\n    }\\n  }\\n};\\n\\n//# sourceURL=webpack://%5Bname%5DLink/./index.js?\");\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=freeze-scroll.commonjs2.js.map\n\n//# sourceURL=webpack:///./node_modules/@threespot/freeze-scroll/dist/freeze-scroll.m.js?");

/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( true ) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/ev-emitter/ev-emitter.js?");

/***/ })

/******/ });